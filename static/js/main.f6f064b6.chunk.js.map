{"version":3,"sources":["components/CustomNavbar.js","components/Layout.js","Context/AuthContext.js","components/LoginScreen.js","axios.js","components/MainScreen.js","PrivateRoute.js","App.js","reportWebVitals.js","index.js"],"names":["CustomNavbar","props","Navbar","bg","variant","sticky","Container","fluid","Brand","className","href","Layout","children","AuthContext","React","createContext","LoginScreen","useContext","setLogin","setUsername","useState","user","setUser","useEffect","loginMessage","location","state","Card","Body","Title","Form","Group","controlId","Label","Control","type","placeholder","onChange","event","target","value","Button","onClick","e","preventDefault","localStorage","setItem","history","push","instance","Axios","create","baseURL","MainScreen","userName","data","setData","page","setPage","loader","useRef","get","then","response","catch","error","console","log","handleObserver","entities","isIntersecting","observer","IntersectionObserver","root","rootMargin","threshold","current","observe","Row","Col","md","sm","class","map","Img","src","url","id","Text","title","ref","Spinner","animation","role","size","as","PrivateRoute","Component","component","rest","login","loginVal","getItem","render","to","pathname","App","Provider","exact","path","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById"],"mappings":"oQAkBeA,EAdM,SAACC,GACpB,OACE,cAACC,EAAA,EAAD,CAAQC,GAAG,OAAOC,QAAQ,OAAOC,OAAO,MAAxC,SACE,cAACC,EAAA,EAAD,CAAWC,OAAK,EAAhB,SACE,8BACE,cAACL,EAAA,EAAOM,MAAR,CAAcC,UAAU,OAAOC,KAAK,QAApC,oCCIKC,EATA,SAACV,GACd,OACE,qCACE,cAAC,EAAD,IACA,cAACK,EAAA,EAAD,UAAYL,EAAMW,e,wBCHTC,EAFKC,IAAMC,cAAc,ICuCzBC,EAtCK,SAACf,GACnB,MAAiCgB,qBAAWJ,GAApCK,EAAR,EAAQA,SAASC,EAAjB,EAAiBA,YACjB,EAAqBC,mBAAS,IAA9B,mBAAOC,EAAP,KAAYC,EAAZ,KAOAC,qBAAU,WACNJ,EAAYE,KACd,CAACA,EAAKF,IACR,IAAMK,EAAoC,SAAvBvB,EAAMwB,SAASC,MAAe,sDAA+B,GAChF,OACE,qBAAKjB,UAAU,aAAf,SACE,cAACkB,EAAA,EAAD,UACE,eAACA,EAAA,EAAKC,KAAN,WACE,cAACD,EAAA,EAAKE,MAAN,oBACCL,EACD,eAACM,EAAA,EAAD,WACE,eAACA,EAAA,EAAKC,MAAN,CAAYC,UAAU,iBAAtB,UACE,cAACF,EAAA,EAAKG,MAAN,uBACA,cAACH,EAAA,EAAKI,QAAN,CAAcC,KAAK,QAAQC,YAAY,iBAAiBC,SAAU,SAACC,GAAD,OAAShB,EAAQgB,EAAMC,OAAOC,aAElG,eAACV,EAAA,EAAKC,MAAN,CAAYC,UAAU,oBAAtB,UACE,cAACF,EAAA,EAAKG,MAAN,uBACA,cAACH,EAAA,EAAKI,QAAN,CAAcC,KAAK,WAAWC,YAAY,gBAE5C,cAACK,EAAA,EAAD,CAAQrC,QAAQ,UAAU+B,KAAK,SAASO,QAzB7B,SAACC,GACpBA,EAAEC,iBACF1B,GAAS,GACT2B,aAAaC,QAAQ,SAAS,GAC9B7C,EAAM8C,QAAQC,KAAK,UAqBX,+B,uDCzBGC,E,OALEC,EAAMC,OAAO,CAC1BC,QAAQ,0CC2FGC,EAzFI,SAACpD,GAClB,MAA+BgB,qBAAWJ,GAAlCK,EAAR,EAAQA,SAAUoC,EAAlB,EAAkBA,SAClB,EAAwBlC,mBAAS,IAAjC,mBAAOmC,EAAP,KAAaC,EAAb,KACA,EAAwBpC,mBAAS,GAAjC,mBAAOqC,EAAP,KAAaC,EAAb,KACMC,EAASC,iBAAO,MAQtBrC,qBAAU,WACR0B,EACGY,IAAI,iBAAmBJ,EAAO,aAC9BK,MAAK,SAAUC,GACdP,EAAQ,GAAD,mBAAKD,GAAL,YAAcQ,EAASR,WAE/BS,OAAM,SAAUC,GACfC,QAAQC,IAAIF,QAGf,CAACR,IAEJ,IAAMW,EAAiB,SAACC,GACPA,EAAS,GACbC,gBACTZ,GAAQ,SAACD,GAAD,OAAUA,EAAO,MAgB7B,OAZAlC,qBAAU,WACR,IAKMgD,EAAW,IAAIC,qBAAqBJ,EAL5B,CACZK,KAAM,KACNC,WAAY,OACZC,UAAW,IAGThB,EAAOiB,SACTL,EAASM,QAAQlB,EAAOiB,WAEzB,IAGD,sBAAKnE,UAAU,aAAf,UACE,eAACqE,EAAA,EAAD,WACE,cAACC,EAAA,EAAD,CAAKC,GAAI,GAAIC,GAAI,GAAjB,SACE,gDAAmB3B,OAErB,cAACyB,EAAA,EAAD,CAAKC,GAAI,EAAGC,GAAI,GAAhB,SACE,wBACEC,MAAM,yBACN/C,KAAK,SACLO,QA/CY,WACpBxB,GAAS,GACT2B,aAAaC,QAAQ,SAAS,GAC9B7C,EAAM8C,QAAQC,KAAK,WAyCb,yBASJ,qBAAKvC,UAAU,aAAf,SACE,cAACqE,EAAA,EAAD,UACGvB,EAAK4B,KAAI,SAAC5B,GAAD,OACR,cAACwB,EAAA,EAAD,CAAKC,GAAI,EAAGC,GAAI,GAAkBxE,UAAU,cAA5C,SACE,eAACkB,EAAA,EAAD,WACE,cAACA,EAAA,EAAKyD,IAAN,CAAUhF,QAAQ,MAAMiF,IAAK9B,EAAK+B,MAClC,eAAC3D,EAAA,EAAKC,KAAN,WACE,cAACD,EAAA,EAAKE,MAAN,UAAa0B,EAAKgC,KAClB,cAAC5D,EAAA,EAAK6D,KAAN,UAAYjC,EAAKkC,eALElC,EAAKgC,WAYpC,qBAAK9E,UAAU,cAAciF,IAAK/B,EAAlC,SACE,cAACgC,EAAA,EAAD,CACEC,UAAU,SACVC,KAAK,SACLC,KAAK,KACL1F,QAAQ,SACR2F,GAAG,MALL,SAOE,sBAAMtF,UAAU,iBAAhB,gC,gBCpEKuF,EAfM,SAAC,GAA4C,IAAhCC,EAA+B,EAA1CC,UAAgCC,GAAU,EAApBC,MAAoB,sCACzDC,IAASxD,aAAayD,QAAQ,UAASzD,aAAayD,QAAQ,SAChE,OACA,cAAC,IAAD,2BACMH,GADN,IAEEI,OAAQ,SAACtG,GAAD,MACK,SAAXoG,EAAoB,cAACJ,EAAD,eAAehG,IAAY,cAAC,IAAD,CAAUuG,GAAI,CACzDC,SAAS,SACT/E,MAAM,eCoBHgF,MAtBf,WACE,IAAML,IAASxD,aAAayD,QAAQ,UAASzD,aAAayD,QAAQ,SAClE,EAA0BlF,mBAASiF,GAAnC,mBAAOD,EAAP,KAAclF,EAAd,KACA,EAAgCE,mBAAS,IAAzC,mBAAOkC,EAAP,KAAiBnC,EAAjB,KAEA,OACE,qBAAKV,UAAU,MAAf,SACE,cAAC,EAAYkG,SAAb,CAAsBnE,MAAO,CAAEtB,WAAUC,cAAYmC,WAAS8C,SAA9D,SACA,cAAC,IAAD,UACE,cAAC,EAAD,UACI,eAAC,IAAD,WACE,cAAC,IAAD,CAAOQ,OAAK,EAACC,KAAK,SAASX,UAAWlF,IACtC,cAAC,EAAD,CAAc4F,OAAK,EAACC,KAAK,QAAQX,UAAW7C,EAAY+C,MAAOA,IAC/D,cAAC,EAAD,CAAcS,KAAK,IAAIX,UAAW7C,EAAY+C,MAAOA,gBCXpDU,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBlD,MAAK,YAAkD,IAA/CmD,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASf,OACP,cAAC,IAAMgB,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BX,M","file":"static/js/main.f6f064b6.chunk.js","sourcesContent":["import React from \"react\";\nimport { Container, Navbar } from \"react-bootstrap\";\n\n\nconst CustomNavbar = (props) => {\n  return (\n    <Navbar bg=\"dark\" variant=\"dark\" sticky=\"top\">\n      <Container fluid>\n        <div>\n          <Navbar.Brand className=\"pl-5\" href=\"#home\">\n            Infinite Scroll\n          </Navbar.Brand>\n        </div>\n      </Container>\n    </Navbar>\n  );\n};\n\nexport default CustomNavbar;\n","import React from \"react\";\nimport { Container } from \"react-bootstrap\";\nimport CustomNavbar from \"./CustomNavbar\";\n\nconst Layout = (props) => {\n  return (\n    <>\n      <CustomNavbar />\n      <Container>{props.children}</Container>\n    </>\n  );\n};\n\nexport default Layout;\n","import React from 'react';\n\n\nconst AuthContext = React.createContext({});\n\nexport default AuthContext;","import React, { useContext, useEffect, useState } from \"react\";\nimport { Button, Card, Form } from \"react-bootstrap\";\nimport AuthContext from \"../Context/AuthContext\";\n\nconst LoginScreen = (props) => {\n  const { setLogin,setUsername } = useContext(AuthContext);\n  const [user,setUser]=useState('');\n  const loginHandler = (e) => {\n    e.preventDefault();\n    setLogin(true);\n    localStorage.setItem(\"login\", true);\n    props.history.push(\"/home\");\n  };\n  useEffect(()=>{\n      setUsername(user);\n  },[user,setUsername])\n  const loginMessage=props.location.state==='true'?<div>Please login first!</div>:'';\n  return (\n    <div className=\"Login-Card\">\n      <Card>\n        <Card.Body>\n          <Card.Title>Login</Card.Title>\n          {loginMessage} \n          <Form>\n            <Form.Group controlId=\"formBasicEmail\">\n              <Form.Label>Username</Form.Label>\n              <Form.Control type=\"email\" placeholder=\"Enter username\" onChange={(event)=>setUser(event.target.value)}/>\n            </Form.Group>\n            <Form.Group controlId=\"formBasicPassword\">  \n              <Form.Label>Password</Form.Label>\n              <Form.Control type=\"password\" placeholder=\"Password\" />\n            </Form.Group>\n            <Button variant=\"primary\" type=\"submit\" onClick={loginHandler}>\n              Submit\n            </Button>\n          </Form>\n        </Card.Body>\n      </Card>\n    </div>\n  );\n};\n\nexport default LoginScreen;\n","import Axios from 'axios'\n\nconst instance = Axios.create({\n    baseURL:'https://jsonplaceholder.typicode.com/'\n});\n\n\nexport default instance;","import React, { useContext, useEffect, useRef, useState } from \"react\";\nimport { Card, Col, Row, Spinner } from \"react-bootstrap\";\nimport instance from \"../axios\";\nimport AuthContext from \"../Context/AuthContext\";\n\nconst MainScreen = (props) => {\n  const { setLogin, userName } = useContext(AuthContext);\n  const [data, setData] = useState([]);\n  const [page, setPage] = useState(1);\n  const loader = useRef(null);\n\n  const logoutHandler = () => {\n    setLogin(false);\n    localStorage.setItem(\"login\", false);\n    props.history.push(\"/login\");\n  };\n\n  useEffect(() => {\n    instance\n      .get(\"/photos?_page=\" + page + \"&_limit=5\")\n      .then(function (response) {\n        setData([...data, ...response.data]);\n      })\n      .catch(function (error) {\n        console.log(error);\n      });\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [page]);\n\n  const handleObserver = (entities) => {\n    const target = entities[0];\n    if (target.isIntersecting) {\n      setPage((page) => page + 1);\n    }\n  };\n\n  useEffect(() => {\n    var options = {\n      root: null,\n      rootMargin: \"20px\",\n      threshold: 1.0,\n    };\n    const observer = new IntersectionObserver(handleObserver, options);\n    if (loader.current) {\n      observer.observe(loader.current);\n    }\n  }, []);\n\n  return (\n    <div className=\"MainScreen\">\n      <Row>\n        <Col md={10} sm={12}>\n          <h3>Welcome User: {userName}</h3>\n        </Col>\n        <Col md={2} sm={12}>\n          <button\n            class=\"btn btn-outline-danger\"\n            type=\"button\"\n            onClick={logoutHandler}\n          >\n            Logout\n          </button>\n        </Col>\n      </Row>\n      <div className=\"ScrollList\">\n        <Row>\n          {data.map((data) => (\n            <Col md={4} sm={12} key={data.id} className=\"Scroll-Card\">\n              <Card>\n                <Card.Img variant=\"top\" src={data.url} />\n                <Card.Body>\n                  <Card.Title>{data.id}</Card.Title>\n                  <Card.Text>{data.title}</Card.Text>\n                </Card.Body>\n              </Card>\n            </Col>\n          ))}\n        </Row>\n      </div>\n      <div className=\"spinner-div\" ref={loader}>\n        <Spinner\n          animation=\"border\"\n          role=\"status\"\n          size=\"xl\"\n          variant=\"danger\"\n          as=\"div\"\n        >\n          <span className=\"sr-only center\">Loading...</span>\n        </Spinner>\n      </div>\n    </div>\n  );\n};\n\nexport default MainScreen;\n","import React from \"react\";\nimport { Redirect, Route } from \"react-router-dom\";\n\n\nconst PrivateRoute = ({component: Component, login, ...rest}) => {\n  const loginVal=localStorage.getItem('login')?localStorage.getItem('login'):false;\n    return (\n    <Route\n      {...rest}\n      render={(props) =>\n        loginVal==='true' ? <Component {...props} /> : <Redirect to={{\n            pathname:'/login',\n            state:'true'\n        }}/>\n      }\n    />\n  );\n};\n\nexport default PrivateRoute;\n","import \"./App.scss\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport Layout from \"./components/Layout\";\nimport LoginScreen from \"./components/LoginScreen\";\nimport AuthContext from \"./Context/AuthContext\";\nimport {  useState } from \"react\";\nimport {  Route, BrowserRouter as Router, Switch } from \"react-router-dom\";\nimport MainScreen from \"./components/MainScreen\";\nimport PrivateRoute from \"./PrivateRoute\";\n\nfunction App() {\n  const loginVal=localStorage.getItem('login')?localStorage.getItem('login'):false;\n  const [login, setLogin] = useState(loginVal);\n  const [userName, setUsername] = useState(\"\");\n  \n  return (\n    <div className=\"App\">\n      <AuthContext.Provider value={{ setLogin, setUsername,userName,login}}>\n      <Router>\n        <Layout>\n            <Switch>\n              <Route exact path=\"/login\" component={LoginScreen}/>\n              <PrivateRoute exact path=\"/home\" component={MainScreen} login={login}/>\n              <PrivateRoute path='/' component={MainScreen} login={login}/>\n            </Switch>\n        </Layout>\n        </Router>\n      </AuthContext.Provider>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}